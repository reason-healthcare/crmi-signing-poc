#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const sha256 = require('sha256')

// Utility function to read and parse a JSON file
const readJsonFile = (filePath) => {
  const fileContent = fs.readFileSync(filePath, 'utf8')
  return JSON.parse(fileContent)
}

// Function to create a hash of the FHIR resource
// If the resource encoding is not JSON, the processing semantics are to
// convert the resource to minimifed JSON first.
const createResourceHash = (resourceOrPath) => {
  // Parse the input as a file path or a resource object
  if (typeof resourceOrPath === 'string') {
    const filePath = path.resolve(resourceOrPath)
    resource = readJsonFile(filePath)
  } else if (resourceOrPath.resourceType) {
    resource = resourceOrPath
  } else {
    throw new Error('Invalid FHIR resource: no resourceType found')
  }

  const { meta, text, id, ...resourceToEncode } = resource
  const stringToHash = JSON.stringify(resourceToEncode)
  return sha256(stringToHash)
}

console.log(createResourceHash(process.argv[2]))
